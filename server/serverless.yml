service: transpose-serverless

custom:
  stage: ${env:NODE_ENV, 'dev'}
  dotenv:
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
  apiCloudFront:
    domain: api.transposeapp.com
    certificate: arn:aws:acm:us-east-1:177450493151:certificate/05f96424-d3f1-46ae-b77a-52af7846a842
    logging:
      bucket: transposeapp.s3.amazonaws.com
      prefix: cf-logs
    cookies: none
    headers: none
    querystring: none
  bundle:
    sourcemaps: true
    linting: false
    copyFiles:
      - from: 'MusicKitKey.p8'
        to: './'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.stage}
  region: ${env:AWS_REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { 'Fn::GetAtt': ['TransposeDynamoDBTable', 'Arn'] }
        - Fn::Join:
            - '/'
            - - { 'Fn::GetAtt': ['TransposeDynamoDBTable', 'Arn'] }
              - 'index/*'
  environment:
    TRANSPOSE_TABLE: ${env:TRANSPOSE_TABLE}

functions:
  server:
    handler: sls.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

resources:
  Resources:
    TransposeDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${env:TRANSPOSE_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: linkID
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: link-index
            KeySchema:
              - AttributeName: linkID
                KeyType: HASH
            Projection:
              ProjectionType: ALL

plugins:
  - serverless-dotenv-plugin
  - serverless-api-cloudfront
  - serverless-bundle
  - serverless-dynamodb-local
  - serverless-offline
